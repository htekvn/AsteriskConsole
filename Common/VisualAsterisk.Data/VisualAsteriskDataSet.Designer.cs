//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1434
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace VisualAsterisk.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VisualAsteriskDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VisualAsteriskDataSet : global::System.Data.DataSet {
        
        private CallDetailRecordDataTable tableCallDetailRecord;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VisualAsteriskDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected VisualAsteriskDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CallDetailRecord"] != null)) {
                    base.Tables.Add(new CallDetailRecordDataTable(ds.Tables["CallDetailRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CallDetailRecordDataTable CallDetailRecord {
            get {
                return this.tableCallDetailRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            VisualAsteriskDataSet cln = ((VisualAsteriskDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CallDetailRecord"] != null)) {
                    base.Tables.Add(new CallDetailRecordDataTable(ds.Tables["CallDetailRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCallDetailRecord = ((CallDetailRecordDataTable)(base.Tables["CallDetailRecord"]));
            if ((initTable == true)) {
                if ((this.tableCallDetailRecord != null)) {
                    this.tableCallDetailRecord.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "VisualAsteriskDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VisualAsteriskDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCallDetailRecord = new CallDetailRecordDataTable();
            base.Tables.Add(this.tableCallDetailRecord);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCallDetailRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VisualAsteriskDataSet ds = new VisualAsteriskDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CallDetailRecordRowChangeEventHandler(object sender, CallDetailRecordRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CallDetailRecordDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAccountCode;
            
            private global::System.Data.DataColumn columnSrc;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnDestinationContext;
            
            private global::System.Data.DataColumn columnCallerId;
            
            private global::System.Data.DataColumn columnChannel;
            
            private global::System.Data.DataColumn columnDestinationChannel;
            
            private global::System.Data.DataColumn columnLastApplication;
            
            private global::System.Data.DataColumn columnLastData;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnAnswerTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnDuration;
            
            private global::System.Data.DataColumn columnBillableSeconds;
            
            private global::System.Data.DataColumn columnDisposition;
            
            private global::System.Data.DataColumn columnAmaFlags;
            
            private global::System.Data.DataColumn columnUserField;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallDetailRecordDataTable() {
                this.TableName = "CallDetailRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CallDetailRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CallDetailRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrcColumn {
                get {
                    return this.columnSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationContextColumn {
                get {
                    return this.columnDestinationContext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerIdColumn {
                get {
                    return this.columnCallerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChannelColumn {
                get {
                    return this.columnChannel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationChannelColumn {
                get {
                    return this.columnDestinationChannel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastApplicationColumn {
                get {
                    return this.columnLastApplication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastDataColumn {
                get {
                    return this.columnLastData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerTimeColumn {
                get {
                    return this.columnAnswerTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillableSecondsColumn {
                get {
                    return this.columnBillableSeconds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispositionColumn {
                get {
                    return this.columnDisposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmaFlagsColumn {
                get {
                    return this.columnAmaFlags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserFieldColumn {
                get {
                    return this.columnUserField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallDetailRecordRow this[int index] {
                get {
                    return ((CallDetailRecordRow)(this.Rows[index]));
                }
            }
            
            public event CallDetailRecordRowChangeEventHandler CallDetailRecordRowChanging;
            
            public event CallDetailRecordRowChangeEventHandler CallDetailRecordRowChanged;
            
            public event CallDetailRecordRowChangeEventHandler CallDetailRecordRowDeleting;
            
            public event CallDetailRecordRowChangeEventHandler CallDetailRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCallDetailRecordRow(CallDetailRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallDetailRecordRow AddCallDetailRecordRow(
                        string AccountCode, 
                        string Src, 
                        string Destination, 
                        string DestinationContext, 
                        string CallerId, 
                        string Channel, 
                        string DestinationChannel, 
                        string LastApplication, 
                        string LastData, 
                        System.DateTime StartTime, 
                        System.DateTime AnswerTime, 
                        System.DateTime EndTime, 
                        int Duration, 
                        int BillableSeconds, 
                        string Disposition, 
                        string AmaFlags, 
                        string UserField) {
                CallDetailRecordRow rowCallDetailRecordRow = ((CallDetailRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountCode,
                        Src,
                        Destination,
                        DestinationContext,
                        CallerId,
                        Channel,
                        DestinationChannel,
                        LastApplication,
                        LastData,
                        StartTime,
                        AnswerTime,
                        EndTime,
                        Duration,
                        BillableSeconds,
                        Disposition,
                        AmaFlags,
                        UserField};
                rowCallDetailRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCallDetailRecordRow);
                return rowCallDetailRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CallDetailRecordDataTable cln = ((CallDetailRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CallDetailRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnSrc = base.Columns["Src"];
                this.columnDestination = base.Columns["Destination"];
                this.columnDestinationContext = base.Columns["DestinationContext"];
                this.columnCallerId = base.Columns["CallerId"];
                this.columnChannel = base.Columns["Channel"];
                this.columnDestinationChannel = base.Columns["DestinationChannel"];
                this.columnLastApplication = base.Columns["LastApplication"];
                this.columnLastData = base.Columns["LastData"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnAnswerTime = base.Columns["AnswerTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnDuration = base.Columns["Duration"];
                this.columnBillableSeconds = base.Columns["BillableSeconds"];
                this.columnDisposition = base.Columns["Disposition"];
                this.columnAmaFlags = base.Columns["AmaFlags"];
                this.columnUserField = base.Columns["UserField"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAccountCode = new global::System.Data.DataColumn("AccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnSrc = new global::System.Data.DataColumn("Src", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrc);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnDestinationContext = new global::System.Data.DataColumn("DestinationContext", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationContext);
                this.columnCallerId = new global::System.Data.DataColumn("CallerId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerId);
                this.columnChannel = new global::System.Data.DataColumn("Channel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannel);
                this.columnDestinationChannel = new global::System.Data.DataColumn("DestinationChannel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationChannel);
                this.columnLastApplication = new global::System.Data.DataColumn("LastApplication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastApplication);
                this.columnLastData = new global::System.Data.DataColumn("LastData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastData);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnAnswerTime = new global::System.Data.DataColumn("AnswerTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnBillableSeconds = new global::System.Data.DataColumn("BillableSeconds", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillableSeconds);
                this.columnDisposition = new global::System.Data.DataColumn("Disposition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisposition);
                this.columnAmaFlags = new global::System.Data.DataColumn("AmaFlags", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmaFlags);
                this.columnUserField = new global::System.Data.DataColumn("UserField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserField);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallDetailRecordRow NewCallDetailRecordRow() {
                return ((CallDetailRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CallDetailRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CallDetailRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CallDetailRecordRowChanged != null)) {
                    this.CallDetailRecordRowChanged(this, new CallDetailRecordRowChangeEvent(((CallDetailRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CallDetailRecordRowChanging != null)) {
                    this.CallDetailRecordRowChanging(this, new CallDetailRecordRowChangeEvent(((CallDetailRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CallDetailRecordRowDeleted != null)) {
                    this.CallDetailRecordRowDeleted(this, new CallDetailRecordRowChangeEvent(((CallDetailRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CallDetailRecordRowDeleting != null)) {
                    this.CallDetailRecordRowDeleting(this, new CallDetailRecordRowChangeEvent(((CallDetailRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCallDetailRecordRow(CallDetailRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VisualAsteriskDataSet ds = new VisualAsteriskDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CallDetailRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CallDetailRecordRow : global::System.Data.DataRow {
            
            private CallDetailRecordDataTable tableCallDetailRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CallDetailRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCallDetailRecord = ((CallDetailRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    if (this.IsAccountCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableCallDetailRecord.AccountCodeColumn]));
                    }
                }
                set {
                    this[this.tableCallDetailRecord.AccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Src {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.SrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“Src”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.SrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Destination {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.DestinationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“Destination”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationContext {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.DestinationContextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“DestinationContext”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.DestinationContextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerId {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.CallerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“CallerId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.CallerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Channel {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.ChannelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“Channel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.ChannelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationChannel {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.DestinationChannelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“DestinationChannel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.DestinationChannelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastApplication {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.LastApplicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“LastApplication”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.LastApplicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastData {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.LastDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“LastData”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.LastDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCallDetailRecord.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“StartTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AnswerTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCallDetailRecord.AnswerTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“AnswerTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.AnswerTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCallDetailRecord.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“EndTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Duration {
                get {
                    try {
                        return ((int)(this[this.tableCallDetailRecord.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“Duration”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BillableSeconds {
                get {
                    try {
                        return ((int)(this[this.tableCallDetailRecord.BillableSecondsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“BillableSeconds”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.BillableSecondsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disposition {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.DispositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“Disposition”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.DispositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AmaFlags {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.AmaFlagsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“AmaFlags”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.AmaFlagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserField {
                get {
                    try {
                        return ((string)(this[this.tableCallDetailRecord.UserFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CallDetailRecord”中列“UserField”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCallDetailRecord.UserFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountCodeNull() {
                return this.IsNull(this.tableCallDetailRecord.AccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountCodeNull() {
                this[this.tableCallDetailRecord.AccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrcNull() {
                return this.IsNull(this.tableCallDetailRecord.SrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrcNull() {
                this[this.tableCallDetailRecord.SrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationNull() {
                return this.IsNull(this.tableCallDetailRecord.DestinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationNull() {
                this[this.tableCallDetailRecord.DestinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationContextNull() {
                return this.IsNull(this.tableCallDetailRecord.DestinationContextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationContextNull() {
                this[this.tableCallDetailRecord.DestinationContextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerIdNull() {
                return this.IsNull(this.tableCallDetailRecord.CallerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerIdNull() {
                this[this.tableCallDetailRecord.CallerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChannelNull() {
                return this.IsNull(this.tableCallDetailRecord.ChannelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChannelNull() {
                this[this.tableCallDetailRecord.ChannelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationChannelNull() {
                return this.IsNull(this.tableCallDetailRecord.DestinationChannelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationChannelNull() {
                this[this.tableCallDetailRecord.DestinationChannelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastApplicationNull() {
                return this.IsNull(this.tableCallDetailRecord.LastApplicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastApplicationNull() {
                this[this.tableCallDetailRecord.LastApplicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastDataNull() {
                return this.IsNull(this.tableCallDetailRecord.LastDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastDataNull() {
                this[this.tableCallDetailRecord.LastDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableCallDetailRecord.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableCallDetailRecord.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerTimeNull() {
                return this.IsNull(this.tableCallDetailRecord.AnswerTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerTimeNull() {
                this[this.tableCallDetailRecord.AnswerTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableCallDetailRecord.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableCallDetailRecord.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tableCallDetailRecord.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tableCallDetailRecord.DurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillableSecondsNull() {
                return this.IsNull(this.tableCallDetailRecord.BillableSecondsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillableSecondsNull() {
                this[this.tableCallDetailRecord.BillableSecondsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispositionNull() {
                return this.IsNull(this.tableCallDetailRecord.DispositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispositionNull() {
                this[this.tableCallDetailRecord.DispositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmaFlagsNull() {
                return this.IsNull(this.tableCallDetailRecord.AmaFlagsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmaFlagsNull() {
                this[this.tableCallDetailRecord.AmaFlagsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserFieldNull() {
                return this.IsNull(this.tableCallDetailRecord.UserFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserFieldNull() {
                this[this.tableCallDetailRecord.UserFieldColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CallDetailRecordRowChangeEvent : global::System.EventArgs {
            
            private CallDetailRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallDetailRecordRowChangeEvent(CallDetailRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallDetailRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591