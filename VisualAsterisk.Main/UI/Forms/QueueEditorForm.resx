<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="headerPanel.Size" type="System.Drawing.Size, System.Drawing">
    <value>514, 42</value>
  </data>
  <data name="&gt;&gt;headerPanel.Name" xml:space="preserve">
    <value>headerPanel</value>
  </data>
  <data name="&gt;&gt;headerPanel.Type" xml:space="preserve">
    <value>System.Windows.Forms.Panel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;headerPanel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;headerPanel.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="listViewAgents.Dock" type="System.Windows.Forms.DockStyle, System.Windows.Forms">
    <value>Fill</value>
  </data>
  <data name="listViewAgents.Location" type="System.Drawing.Point, System.Drawing">
    <value>3, 17</value>
  </data>
  <data name="listViewAgents.Size" type="System.Drawing.Size, System.Drawing">
    <value>196, 265</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="listViewAgents.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="&gt;&gt;listViewAgents.Name" xml:space="preserve">
    <value>listViewAgents</value>
  </data>
  <data name="&gt;&gt;listViewAgents.Type" xml:space="preserve">
    <value>System.Windows.Forms.ListView, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;listViewAgents.Parent" xml:space="preserve">
    <value>groupBox2</value>
  </data>
  <data name="&gt;&gt;listViewAgents.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="groupBox2.Location" type="System.Drawing.Point, System.Drawing">
    <value>31, 106</value>
  </data>
  <data name="groupBox2.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 285</value>
  </data>
  <data name="groupBox2.TabIndex" type="System.Int32, mscorlib">
    <value>27</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Agents</value>
  </data>
  <data name="&gt;&gt;groupBox2.Name" xml:space="preserve">
    <value>groupBox2</value>
  </data>
  <data name="&gt;&gt;groupBox2.Type" xml:space="preserve">
    <value>System.Windows.Forms.GroupBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;groupBox2.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;groupBox2.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <metadata name="smoothLabel5.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="smoothLabel5.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="smoothLabel5.HelpText" xml:space="preserve">
    <value>Enabling this option causes Asterisk to report, to the Agent, the hold time of the caller before the caller is connected to the Agent.</value>
  </data>
  <data name="smoothLabel5.HelpTitle" xml:space="preserve">
    <value>Report Hold Time:</value>
  </data>
  <data name="smoothLabel5.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="smoothLabel5.Location" type="System.Drawing.Point, System.Drawing">
    <value>32, 272</value>
  </data>
  <data name="smoothLabel5.Size" type="System.Drawing.Size, System.Drawing">
    <value>102, 13</value>
  </data>
  <data name="smoothLabel5.TabIndex" type="System.Int32, mscorlib">
    <value>16</value>
  </data>
  <data name="smoothLabel5.Text" xml:space="preserve">
    <value>Report Hold Time</value>
  </data>
  <data name="&gt;&gt;smoothLabel5.Name" xml:space="preserve">
    <value>smoothLabel5</value>
  </data>
  <data name="&gt;&gt;smoothLabel5.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;smoothLabel5.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;smoothLabel5.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <metadata name="smoothLabel4.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="smoothLabel4.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="smoothLabel4.HelpText" xml:space="preserve">
    <value>This option controls whether callers already on hold are forced out of a queue that has no agents. There are three options.
Yes: Callers are forced out of a queue when no agents are logged in.
No: Callers will remain in a queue with no agents.
Strict: Callers are forced out of a queue with no agents logged in, or if all logged in agents are unavailable.

The default option is Strict. After a caller has left the queue, a caller will hear a busy tone and advance to the next calling rule after attempting to enter the queue.</value>
  </data>
  <data name="smoothLabel4.HelpTitle" xml:space="preserve">
    <value>LeaveWhenEmpty:</value>
  </data>
  <data name="smoothLabel4.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="smoothLabel4.Location" type="System.Drawing.Point, System.Drawing">
    <value>32, 241</value>
  </data>
  <data name="smoothLabel4.Size" type="System.Drawing.Size, System.Drawing">
    <value>107, 13</value>
  </data>
  <data name="smoothLabel4.TabIndex" type="System.Int32, mscorlib">
    <value>15</value>
  </data>
  <data name="smoothLabel4.Text" xml:space="preserve">
    <value>LeaveWhenEmpty</value>
  </data>
  <data name="&gt;&gt;smoothLabel4.Name" xml:space="preserve">
    <value>smoothLabel4</value>
  </data>
  <data name="&gt;&gt;smoothLabel4.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;smoothLabel4.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;smoothLabel4.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <metadata name="smoothLabel3.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="smoothLabel3.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="smoothLabel3.HelpText" xml:space="preserve">
    <value>Enabling this option pauses an agent if they fail to answer a call.  This means that the agent is still logged into the queue, but they will not receive calls from the queue.  Once paused, an agent can unpause by logging into the queue using the regular agent login extension.</value>
  </data>
  <data name="smoothLabel3.HelpTitle" xml:space="preserve">
    <value>Auto Pause</value>
  </data>
  <data name="smoothLabel3.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="smoothLabel3.Location" type="System.Drawing.Point, System.Drawing">
    <value>32, 185</value>
  </data>
  <data name="smoothLabel3.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 13</value>
  </data>
  <data name="smoothLabel3.TabIndex" type="System.Int32, mscorlib">
    <value>14</value>
  </data>
  <data name="smoothLabel3.Text" xml:space="preserve">
    <value>Auto Pause</value>
  </data>
  <data name="&gt;&gt;smoothLabel3.Name" xml:space="preserve">
    <value>smoothLabel3</value>
  </data>
  <data name="&gt;&gt;smoothLabel3.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;smoothLabel3.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;smoothLabel3.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <metadata name="smoothLabel1.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="smoothLabel1.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="smoothLabel1.HelpText" xml:space="preserve">
    <value>Defining this option causes the Queue, when multiple calls are in it at the same time, to push them to Agents simultaneously.  Thus, instead of completing one call to an Agent at a time, the Queue will complete as many calls simultaneously to the available Agents.</value>
  </data>
  <data name="smoothLabel1.HelpTitle" xml:space="preserve">
    <value>Auto Fill</value>
  </data>
  <data name="smoothLabel1.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="smoothLabel1.Location" type="System.Drawing.Point, System.Drawing">
    <value>32, 155</value>
  </data>
  <data name="smoothLabel1.Size" type="System.Drawing.Size, System.Drawing">
    <value>58, 13</value>
  </data>
  <data name="smoothLabel1.TabIndex" type="System.Int32, mscorlib">
    <value>12</value>
  </data>
  <data name="smoothLabel1.Text" xml:space="preserve">
    <value>Auto Fill</value>
  </data>
  <data name="&gt;&gt;smoothLabel1.Name" xml:space="preserve">
    <value>smoothLabel1</value>
  </data>
  <data name="&gt;&gt;smoothLabel1.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;smoothLabel1.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;smoothLabel1.ZOrder" xml:space="preserve">
    <value>3</value>
  </data>
  <metadata name="timeoutLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="timeoutLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="timeoutLabel.HelpText" xml:space="preserve">
    <value>How many seconds an Agent's phone will ring before the Queue tries to ring the next Agent.</value>
  </data>
  <data name="timeoutLabel.HelpTitle" xml:space="preserve">
    <value>Timeout:</value>
  </data>
  <data name="timeoutLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>7, 30</value>
  </data>
  <data name="timeoutLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>62, 13</value>
  </data>
  <data name="timeoutLabel.TabIndex" type="System.Int32, mscorlib">
    <value>6</value>
  </data>
  <data name="timeoutLabel.Text" xml:space="preserve">
    <value>Timeout:</value>
  </data>
  <data name="&gt;&gt;timeoutLabel.Name" xml:space="preserve">
    <value>timeoutLabel</value>
  </data>
  <data name="&gt;&gt;timeoutLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;timeoutLabel.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;timeoutLabel.ZOrder" xml:space="preserve">
    <value>4</value>
  </data>
  <metadata name="queueExtensionBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="timeoutTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>99, 27</value>
  </data>
  <data name="timeoutTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="timeoutTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="&gt;&gt;timeoutTextBox.Name" xml:space="preserve">
    <value>timeoutTextBox</value>
  </data>
  <data name="&gt;&gt;timeoutTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;timeoutTextBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;timeoutTextBox.ZOrder" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="autofillCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>9, 150</value>
  </data>
  <data name="autofillCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>17, 24</value>
  </data>
  <data name="autofillCheckBox.TabIndex" type="System.Int32, mscorlib">
    <value>4</value>
  </data>
  <data name="autofillCheckBox.Text" xml:space="preserve">
    <value>Auto Fill</value>
  </data>
  <data name="&gt;&gt;autofillCheckBox.Name" xml:space="preserve">
    <value>autofillCheckBox</value>
  </data>
  <data name="&gt;&gt;autofillCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;autofillCheckBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;autofillCheckBox.ZOrder" xml:space="preserve">
    <value>6</value>
  </data>
  <metadata name="wrapuptimeLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="wrapuptimeLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="wrapuptimeLabel.HelpText" xml:space="preserve">
    <value>How many seconds after the completion of a call an Agent will have before the Queue can ring them with a new call. The default is 0, which is no delay.</value>
  </data>
  <data name="wrapuptimeLabel.HelpTitle" xml:space="preserve">
    <value>Wrapup Time:</value>
  </data>
  <data name="wrapuptimeLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>6, 60</value>
  </data>
  <data name="wrapuptimeLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>82, 13</value>
  </data>
  <data name="wrapuptimeLabel.TabIndex" type="System.Int32, mscorlib">
    <value>7</value>
  </data>
  <data name="wrapuptimeLabel.Text" xml:space="preserve">
    <value>Wrapuptime:</value>
  </data>
  <data name="&gt;&gt;wrapuptimeLabel.Name" xml:space="preserve">
    <value>wrapuptimeLabel</value>
  </data>
  <data name="&gt;&gt;wrapuptimeLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;wrapuptimeLabel.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;wrapuptimeLabel.ZOrder" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="autopauseCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>9, 180</value>
  </data>
  <data name="autopauseCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>17, 24</value>
  </data>
  <data name="autopauseCheckBox.TabIndex" type="System.Int32, mscorlib">
    <value>5</value>
  </data>
  <data name="autopauseCheckBox.Text" xml:space="preserve">
    <value>Auto Pause</value>
  </data>
  <data name="&gt;&gt;autopauseCheckBox.Name" xml:space="preserve">
    <value>autopauseCheckBox</value>
  </data>
  <data name="&gt;&gt;autopauseCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;autopauseCheckBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;autopauseCheckBox.ZOrder" xml:space="preserve">
    <value>8</value>
  </data>
  <metadata name="joinemptyLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="joinemptyLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="joinemptyLabel.HelpText" xml:space="preserve">
    <value>This option controls whether callers can join a call queue that has no agents. There are three options, 

Yes: Callers can join a call queue with no agents or only unavailable agents 
No: Callers cannot join a queue with no agents 
Strict: Callers cannot join a queue with no agents or if all agents are unavailable. 

 The default option is No.</value>
  </data>
  <data name="joinemptyLabel.HelpTitle" xml:space="preserve">
    <value>Join Empty:</value>
  </data>
  <data name="joinemptyLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 210</value>
  </data>
  <data name="joinemptyLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>76, 13</value>
  </data>
  <data name="joinemptyLabel.TabIndex" type="System.Int32, mscorlib">
    <value>10</value>
  </data>
  <data name="joinemptyLabel.Text" xml:space="preserve">
    <value>Joinempty: </value>
  </data>
  <data name="&gt;&gt;joinemptyLabel.Name" xml:space="preserve">
    <value>joinemptyLabel</value>
  </data>
  <data name="&gt;&gt;joinemptyLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;joinemptyLabel.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;joinemptyLabel.ZOrder" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="joinemptyTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>99, 205</value>
  </data>
  <data name="joinemptyTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="joinemptyTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>6</value>
  </data>
  <data name="&gt;&gt;joinemptyTextBox.Name" xml:space="preserve">
    <value>joinemptyTextBox</value>
  </data>
  <data name="&gt;&gt;joinemptyTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;joinemptyTextBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;joinemptyTextBox.ZOrder" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="wrapuptimeTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>99, 57</value>
  </data>
  <data name="wrapuptimeTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="wrapuptimeTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>1</value>
  </data>
  <data name="&gt;&gt;wrapuptimeTextBox.Name" xml:space="preserve">
    <value>wrapuptimeTextBox</value>
  </data>
  <data name="&gt;&gt;wrapuptimeTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;wrapuptimeTextBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;wrapuptimeTextBox.ZOrder" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="reportholdtimeCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>9, 267</value>
  </data>
  <data name="reportholdtimeCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>17, 24</value>
  </data>
  <data name="reportholdtimeCheckBox.TabIndex" type="System.Int32, mscorlib">
    <value>8</value>
  </data>
  <data name="reportholdtimeCheckBox.Text" xml:space="preserve">
    <value>Report Hold Time</value>
  </data>
  <data name="&gt;&gt;reportholdtimeCheckBox.Name" xml:space="preserve">
    <value>reportholdtimeCheckBox</value>
  </data>
  <data name="&gt;&gt;reportholdtimeCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;reportholdtimeCheckBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;reportholdtimeCheckBox.ZOrder" xml:space="preserve">
    <value>12</value>
  </data>
  <metadata name="maxlenLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="maxlenLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="maxlenLabel.HelpText" xml:space="preserve">
    <value>How many calls can be queued at once. This count does not include calls that have been connected with Agents, it only includes calls that have not yet been connected. Default is 0, which is no limit. When the limit has been reached, a caller will hear a busy tone and advance to the next calling rule after attempting to enter the queue.</value>
  </data>
  <data name="maxlenLabel.HelpTitle" xml:space="preserve">
    <value>MaxLen:</value>
  </data>
  <data name="maxlenLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>6, 86</value>
  </data>
  <data name="maxlenLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>61, 13</value>
  </data>
  <data name="maxlenLabel.TabIndex" type="System.Int32, mscorlib">
    <value>10</value>
  </data>
  <data name="maxlenLabel.Text" xml:space="preserve">
    <value>Maxlen: </value>
  </data>
  <data name="&gt;&gt;maxlenLabel.Name" xml:space="preserve">
    <value>maxlenLabel</value>
  </data>
  <data name="&gt;&gt;maxlenLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;maxlenLabel.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;maxlenLabel.ZOrder" xml:space="preserve">
    <value>13</value>
  </data>
  <data name="leavewhenemptyCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>9, 236</value>
  </data>
  <data name="leavewhenemptyCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>17, 24</value>
  </data>
  <data name="leavewhenemptyCheckBox.TabIndex" type="System.Int32, mscorlib">
    <value>7</value>
  </data>
  <data name="leavewhenemptyCheckBox.Text" xml:space="preserve">
    <value>LeaveWhenEmpty</value>
  </data>
  <data name="&gt;&gt;leavewhenemptyCheckBox.Name" xml:space="preserve">
    <value>leavewhenemptyCheckBox</value>
  </data>
  <data name="&gt;&gt;leavewhenemptyCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;leavewhenemptyCheckBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;leavewhenemptyCheckBox.ZOrder" xml:space="preserve">
    <value>14</value>
  </data>
  <data name="maxlenTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>99, 83</value>
  </data>
  <data name="maxlenTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="maxlenTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>2</value>
  </data>
  <data name="&gt;&gt;maxlenTextBox.Name" xml:space="preserve">
    <value>maxlenTextBox</value>
  </data>
  <data name="&gt;&gt;maxlenTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;maxlenTextBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;maxlenTextBox.ZOrder" xml:space="preserve">
    <value>15</value>
  </data>
  <metadata name="musicclassLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="musicclassLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="musicclassLabel.HelpText" xml:space="preserve">
    <value>Select the 'Music on Hold' Class for this Queue. 'Music on Hold' classes can be managed from the the 'Music On Hold' panel on the left.</value>
  </data>
  <data name="musicclassLabel.HelpTitle" xml:space="preserve">
    <value>Music On Hold:</value>
  </data>
  <data name="musicclassLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>7, 118</value>
  </data>
  <data name="musicclassLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>91, 13</value>
  </data>
  <data name="musicclassLabel.TabIndex" type="System.Int32, mscorlib">
    <value>11</value>
  </data>
  <data name="musicclassLabel.Text" xml:space="preserve">
    <value>Music On Hold:</value>
  </data>
  <data name="&gt;&gt;musicclassLabel.Name" xml:space="preserve">
    <value>musicclassLabel</value>
  </data>
  <data name="&gt;&gt;musicclassLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;musicclassLabel.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;musicclassLabel.ZOrder" xml:space="preserve">
    <value>16</value>
  </data>
  <data name="musicclassTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>99, 115</value>
  </data>
  <data name="musicclassTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="musicclassTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>3</value>
  </data>
  <data name="&gt;&gt;musicclassTextBox.Name" xml:space="preserve">
    <value>musicclassTextBox</value>
  </data>
  <data name="&gt;&gt;musicclassTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;musicclassTextBox.Parent" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;musicclassTextBox.ZOrder" xml:space="preserve">
    <value>17</value>
  </data>
  <data name="groupBox1.Location" type="System.Drawing.Point, System.Drawing">
    <value>262, 20</value>
  </data>
  <data name="groupBox1.Size" type="System.Drawing.Size, System.Drawing">
    <value>223, 373</value>
  </data>
  <data name="groupBox1.TabIndex" type="System.Int32, mscorlib">
    <value>26</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Queue Options</value>
  </data>
  <data name="&gt;&gt;groupBox1.Name" xml:space="preserve">
    <value>groupBox1</value>
  </data>
  <data name="&gt;&gt;groupBox1.Type" xml:space="preserve">
    <value>System.Windows.Forms.GroupBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;groupBox1.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;groupBox1.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <metadata name="extensionLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="extensionLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="extensionLabel.HelpText" xml:space="preserve">
    <value>This option defines the numbered extension that may be dialed to reach this Queue.</value>
  </data>
  <data name="extensionLabel.HelpTitle" xml:space="preserve">
    <value>Queue Extension:</value>
  </data>
  <data name="extensionLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>28, 22</value>
  </data>
  <data name="extensionLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>71, 13</value>
  </data>
  <data name="extensionLabel.TabIndex" type="System.Int32, mscorlib">
    <value>28</value>
  </data>
  <data name="extensionLabel.Text" xml:space="preserve">
    <value>Extension:</value>
  </data>
  <data name="&gt;&gt;extensionLabel.Name" xml:space="preserve">
    <value>extensionLabel</value>
  </data>
  <data name="&gt;&gt;extensionLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;extensionLabel.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;extensionLabel.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="extensionTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>129, 20</value>
  </data>
  <data name="extensionTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="extensionTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>23</value>
  </data>
  <data name="&gt;&gt;extensionTextBox.Name" xml:space="preserve">
    <value>extensionTextBox</value>
  </data>
  <data name="&gt;&gt;extensionTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;extensionTextBox.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;extensionTextBox.ZOrder" xml:space="preserve">
    <value>3</value>
  </data>
  <metadata name="nameLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="nameLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="nameLabel.HelpText" xml:space="preserve">
    <value>This option defines a name for this Queue, i.e. "Sales". 'Name' is a label to help you see this queue in the queue list.</value>
  </data>
  <data name="nameLabel.HelpTitle" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="nameLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>28, 52</value>
  </data>
  <data name="nameLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>51, 13</value>
  </data>
  <data name="nameLabel.TabIndex" type="System.Int32, mscorlib">
    <value>29</value>
  </data>
  <data name="nameLabel.Text" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="&gt;&gt;nameLabel.Name" xml:space="preserve">
    <value>nameLabel</value>
  </data>
  <data name="&gt;&gt;nameLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;nameLabel.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;nameLabel.ZOrder" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="nameTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>129, 49</value>
  </data>
  <data name="nameTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="nameTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>24</value>
  </data>
  <data name="&gt;&gt;nameTextBox.Name" xml:space="preserve">
    <value>nameTextBox</value>
  </data>
  <data name="&gt;&gt;nameTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;nameTextBox.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;nameTextBox.ZOrder" xml:space="preserve">
    <value>5</value>
  </data>
  <metadata name="strategyLabel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="strategyLabel.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="strategyLabel.HelpText" xml:space="preserve">
    <value>This option sets the Ringing Strategy for this Queue.  The options are
RingAll: Ring All available Agents simultaneously until one answers. 
RoundRobin: Take turns ringing each available Agent 
LeastRecent: Ring the Agent which was least recently called 
FewestCalls: Ring the Agent with the fewest completed calls 
Random: Ring a Random Agent 
RRmemory: RoundRobin with Memory, Remembers where it left off in the last ring pass
</value>
  </data>
  <data name="strategyLabel.HelpTitle" xml:space="preserve">
    <value>Strategy:</value>
  </data>
  <data name="strategyLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>28, 82</value>
  </data>
  <data name="strategyLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>69, 13</value>
  </data>
  <data name="strategyLabel.TabIndex" type="System.Int32, mscorlib">
    <value>30</value>
  </data>
  <data name="strategyLabel.Text" xml:space="preserve">
    <value>Strategy: </value>
  </data>
  <data name="&gt;&gt;strategyLabel.Name" xml:space="preserve">
    <value>strategyLabel</value>
  </data>
  <data name="&gt;&gt;strategyLabel.Type" xml:space="preserve">
    <value>Controls.SmoothLabel, Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;strategyLabel.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;strategyLabel.ZOrder" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="strategyTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>129, 79</value>
  </data>
  <data name="strategyTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>104, 21</value>
  </data>
  <data name="strategyTextBox.TabIndex" type="System.Int32, mscorlib">
    <value>25</value>
  </data>
  <data name="&gt;&gt;strategyTextBox.Name" xml:space="preserve">
    <value>strategyTextBox</value>
  </data>
  <data name="&gt;&gt;strategyTextBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;strategyTextBox.Parent" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;strategyTextBox.ZOrder" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="contentPanel.Size" type="System.Drawing.Size, System.Drawing">
    <value>514, 446</value>
  </data>
  <data name="&gt;&gt;contentPanel.Name" xml:space="preserve">
    <value>contentPanel</value>
  </data>
  <data name="&gt;&gt;contentPanel.Type" xml:space="preserve">
    <value>System.Windows.Forms.Panel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;contentPanel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;contentPanel.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="buttomPanel.Location" type="System.Drawing.Point, System.Drawing">
    <value>0, 439</value>
  </data>
  <data name="buttomPanel.Size" type="System.Drawing.Size, System.Drawing">
    <value>514, 49</value>
  </data>
  <data name="&gt;&gt;buttomPanel.Name" xml:space="preserve">
    <value>buttomPanel</value>
  </data>
  <data name="&gt;&gt;buttomPanel.Type" xml:space="preserve">
    <value>System.Windows.Forms.Panel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;buttomPanel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;buttomPanel.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="cancelButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>424, 14</value>
  </data>
  <data name="&gt;&gt;cancelButton.Name" xml:space="preserve">
    <value>cancelButton</value>
  </data>
  <data name="&gt;&gt;cancelButton.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;cancelButton.Parent" xml:space="preserve">
    <value>buttomPanel</value>
  </data>
  <data name="&gt;&gt;cancelButton.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="okButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>311, 14</value>
  </data>
  <data name="&gt;&gt;okButton.Name" xml:space="preserve">
    <value>okButton</value>
  </data>
  <data name="&gt;&gt;okButton.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;okButton.Parent" xml:space="preserve">
    <value>buttomPanel</value>
  </data>
  <data name="&gt;&gt;okButton.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.AutoScaleDimensions" type="System.Drawing.SizeF, System.Drawing">
    <value>6, 13</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>514, 488</value>
  </data>
  <data name="$this.StartPosition" type="System.Windows.Forms.FormStartPosition, System.Windows.Forms">
    <value>WindowsDefaultLocation</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Queue Configuration</value>
  </data>
  <data name="&gt;&gt;queueExtensionBindingSource.Name" xml:space="preserve">
    <value>queueExtensionBindingSource</value>
  </data>
  <data name="&gt;&gt;queueExtensionBindingSource.Type" xml:space="preserve">
    <value>System.Windows.Forms.BindingSource, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>QueueEditorForm</value>
  </data>
  <data name="&gt;&gt;$this.Type" xml:space="preserve">
    <value>VisualAsterisk.Main.UI.Forms.EditorWizardFormBase, VisualAsterisk, Version=1.0.3310.29227, Culture=neutral, PublicKeyToken=null</value>
  </data>
</root>